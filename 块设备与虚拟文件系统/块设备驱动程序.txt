块设备的主要特点是，CPU和总线读写数据所花时间与磁盘硬件的速度不匹配。

对块设备分层的设计，其着眼点是性能。

应该把扇区作为数据传送的基本单位；不允许传送少于一个扇区的数据。

扇区是硬件设备传送数据的基本单位，而块是VFS和文件系统传送数据的基本单位。

当通用块层启动一次新的I/O操作时，调用bio_alloc()函数分配一个新的bio结构。通常，bio结构是由slab分配器分配的，但是，当内存不足时，内核也会使用一个备用的小内存池。

通用块层的核心数据结构是一个称为bio的描述符，它描述了块设备的I/O操作。每个bio结构都包含一个磁盘存储区标识符（存储区中起始扇区号和扇区数目）和一个或多个描述与I/O操作相关的内存区段。

磁盘是一个由通用层处理的逻辑块设备。通常一个磁盘对应一个硬件块设备，但是，磁盘也可以是一个虚拟设备，它建立在几个物理磁盘分区之上或一些RAM专用页中的内存去上。磁盘是由gendisk对象描述的。

当内核发现系统中一个新的磁盘时(在启动阶段，或将一个可移动介质插入一个驱动器中时，或在运行期附加一个外置式磁盘时)，就调用alloc_disk()函数，该函数分配并初始化一个新的gendisk对象，如果新磁盘被分成了几个分区，那么alloc_disk()还会分配并初始化一个适合的hd_struct类型的数组。然后，内核调用add_disk()函数将新的gendisk对象插入到通用层的数据结构中。

块设备驱动程序是中断驱动的：通用块层调用I/O调度程序产生一个新的块设备请求或；扩展一个已有的块设备请求，然后终止。随后激活的块设备驱动程序会调用一个所谓的策略例程(strategy routine)选择一个待处理的请求，并向磁盘控制器发出一条适当的命令来满足这个请求。当I/O操作终止时，磁盘控制器就产生一个中断，如果需要，相应的中断处理程序就又调用策略例程去处理队列中的另一个请求。

块设备驱动程序是Linux块子系统中的最底层组件。它们从I/O调度程序中获得请求，然后按要求处理这些请求。

扇区――设备的最小寻址单位，有时会称作“硬扇区”或“设备块”；
块――文件系统的最小寻址单位，有时会称作“文件块”或“I/O块”，也会直接叫做缓冲区块；
段――一个段就是一个内存页或内存页的一部分，它们包含磁盘上的物理相邻的数据块；
页――磁盘高速缓存作用于磁盘数据的“页”上，每页正好装在一个页框中；
通用块层将所有的上层和下层的组件组合在一起，因此它了解数据的扇区、块、段以及页。

块设备和字符设备的区别在于是否可以随机访问数据。

目前内核中块I/O操作的基本容器由bio结构体表示，该结构体代表了正在现场的（活动的）以片段（segment）链表形式组织的块I/O操作。

每个块设备都是由一个block_device结构的描述符来表示的，